// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nile.API.Models;

#nullable disable

namespace Nile.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211211004640_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Nile.lib.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("ArticleId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Nile.lib.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("Bio")
                        .HasMaxLength(450)
                        .HasColumnType("varchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Bio = "i'm jornalist and a former Software Engeer",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(704),
                            DepartmentId = 4,
                            Email = "maxo@gmail.com",
                            FirstName = "Ali",
                            Gender = 0,
                            LastName = "Sall",
                            PhotoPath = "img/a_7.jfif"
                        },
                        new
                        {
                            AuthorId = 2,
                            Bio = "i'm have Degree in busness and i am a writer",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(846),
                            DepartmentId = 2,
                            Email = "fatima@gmail.com",
                            FirstName = "fatima ",
                            Gender = 1,
                            LastName = "kane",
                            PhotoPath = "img/a_6jfif.jfif"
                        },
                        new
                        {
                            AuthorId = 3,
                            Bio = "I'm a Writer who graduated from XbU with Polilic science Degree ",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(922),
                            DepartmentId = 3,
                            Email = "habib@gmail.com",
                            FirstName = "habib ",
                            Gender = 0,
                            LastName = "Sall",
                            PhotoPath = "img/a_2.jfif"
                        },
                        new
                        {
                            AuthorId = 4,
                            Bio = "i am a journalist with CS background",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(990),
                            DepartmentId = 4,
                            Email = "maxo@gmail.com",
                            FirstName = "Nancy ",
                            Gender = 1,
                            LastName = "fay",
                            PhotoPath = "img/a_1.jfif"
                        },
                        new
                        {
                            AuthorId = 5,
                            Bio = "I am a Sport Analyist and a writer",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(1058),
                            DepartmentId = 1,
                            Email = "nabou@gmail.com",
                            FirstName = "nabou",
                            Gender = 1,
                            LastName = "fall",
                            PhotoPath = "img/a_9.jfif"
                        },
                        new
                        {
                            AuthorId = 6,
                            Bio = "I am a Jornalist who is intrested in tech and sciense",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(1149),
                            DepartmentId = 4,
                            Email = "nabou@gmail.com",
                            FirstName = "Noora",
                            Gender = 1,
                            LastName = "Disllo",
                            PhotoPath = "img/black_q.jpg"
                        },
                        new
                        {
                            AuthorId = 7,
                            Bio = "I am polictic analysist",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(1219),
                            DepartmentId = 3,
                            Email = "nabou@gmail.com",
                            FirstName = "Anwar",
                            Gender = 0,
                            LastName = "Sadiq",
                            PhotoPath = "img/a_3.jfif"
                        },
                        new
                        {
                            AuthorId = 8,
                            Bio = "I am polictic analysist",
                            DateOfBirth = new DateTime(2021, 12, 11, 2, 46, 38, 139, DateTimeKind.Local).AddTicks(1292),
                            DepartmentId = 3,
                            Email = "Mansour@gmail.com",
                            FirstName = "Mansour",
                            Gender = 0,
                            LastName = "Sall",
                            PhotoPath = "img/a_3.jfif"
                        });
                });

            modelBuilder.Entity("Nile.lib.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CommentId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Nile.lib.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Sport"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Bussness and Economy"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Politics"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Science and Tech"
                        });
                });

            modelBuilder.Entity("Nile.lib.Article", b =>
                {
                    b.HasOne("Nile.lib.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Nile.lib.Author", b =>
                {
                    b.HasOne("Nile.lib.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Nile.lib.Comment", b =>
                {
                    b.HasOne("Nile.lib.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Nile.lib.Author", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
